apply plugin: 'java'
apply plugin: 'idea'

sourceCompatibility = 11
targetCompatibility = 11

repositories {
    mavenCentral()

    flatDir {
        dirs 'libs'
    }
}

dependencies {
    // https://mvnrepository.com/artifact/at.favre.lib/hkdf
    compile group: 'at.favre.lib', name: 'hkdf', version: '1.0.1'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    compile name: 'tls13'

    testCompile('org.junit.jupiter:junit-jupiter-api:5.3.2')
    testCompile('org.junit.jupiter:junit-jupiter-params:5.3.2')
    testRuntime('org.junit.jupiter:junit-jupiter-engine:5.3.2')
    testCompile("org.mockito:mockito-core:2.28.2")
    testCompile("org.assertj:assertj-core:3.11.1")
}

test {
    useJUnitPlatform()
    testLogging {
        showStandardStreams = true
        events "passed", "skipped", "failed"
        afterSuite { desc, result ->
            if (!desc.parent) { // will match the outermost suite
                println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
            }
        }
    }

    afterSuite { desc, result ->
        if (!desc.parent) { // will match the outermost suite
            println "Results: ${result.resultType} (${result.testCount} tests, ${result.successfulTestCount} successes, ${result.failedTestCount} failures, ${result.skippedTestCount} skipped)"
        }
    }
}

jar {
    manifest {
        attributes 'Main-Class': 'net.luminis.quic.run.KwikCli'
    }

    doFirst {
        from {
           configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        }
        exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    }
}
